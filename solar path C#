using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SolarPath
public class Program
{
	public static void Main()
	{
		//TO INCLUDE
		Console.WriteLine("Enter Latitude"); /*Setup input for latitude*/
		double r = 1.0; /*convert this into input*/
		//convert degree input to radians
		double cdr = (Math.PI / 180.0);
		//Latitude (LAT) is an input
		double LAT = 0.0;
		
		//Create list of Declinations (DEC)
		List<double> DEC = new List<double>();
		DEC.Add(-23.45);  /*December 22*/
		DEC.Add(-18.00);  /*November 11 & January 30*/
		DEC.Add(-09.00);  /*October 14 & February 27*/
		DEC.Add(0.00);    /*March 21 & September 23*/
		DEC.Add(09.00);   /*April 14 & August 28*/
		DEC.Add(18.00);   /*May 12 & August 1*/
		DEC.Add(23.45);   /*June 22*/
		
		//Create list of Altitudes minus current LAT (ALT)
		List<double> ALT = new List<double>();
		ALT.Add(90.00 - LAT - 23.45);
		ALT.Add(90.00 - LAT - 18.00);
		ALT.Add(90.00 - LAT - 09.00);
		ALT.Add(90.00);
		ALT.Add(90.00 - LAT + 09.00);
		ALT.Add(90.00 - LAT + 18.00);
		ALT.Add(90.00 - LAT + 23.45);

		//Add values to RS list
		//rs = r * Cos(d) / (Sin(LAT) + Sin(d)) 
		List<double> RS_input = new List<double>();
		foreach (double d in DEC) {
			rs_input.add(r * Math.Cos(d * cdr) / (Math.Sin(LAT * cdr) + Math.Sin(d * cdr)));
		}

		//Create DS list (distance of rs to centre)
		//ds = r * Cos(LAT) / (Sin(LAT) + Sin(DEC))
		double DS = ((r * Math.Cos(LAT * cdr)) / (Math.Sin(LAT * cdr) + Math.Sin(DEC[0] * cdr)));
		double DS1 = ((r * Math.Cos(LAT * cdr)) / (Math.Sin(LAT * cdr) + Math.Sin(DEC[1] * cdr)));
		double DS2 = ((r * Math.Cos(LAT * cdr)) / (Math.Sin(LAT * cdr) + Math.Sin(DEC[2] * cdr)));

		
		//Create DT (distance of hour line from centre)
		double DT_input = (r * Math.Tan(LAT * cdr));

		//Create HRA (hour line) values
		List<int> HRA = new List<int>();
		int i = 15;
		for(i = -90; i <= 90; i += 15)
		{
		HRA.Add(i);
		}
		
	}
}